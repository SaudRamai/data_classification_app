-- 003_streams_and_tasks.sql
-- Streams & Tasks for continuous scanning and SLA alerting

USE DATABASE IDENTIFIER($DATABASE);
CREATE SCHEMA IF NOT EXISTS DATA_GOVERNANCE;

-- Task helper: Upsert latest INFORMATION_SCHEMA into ASSET_INVENTORY (Discovery-lite)
CREATE OR REPLACE TASK DATA_GOVERNANCE.TASK_DISCOVERY_SCAN
  WAREHOUSE = IDENTIFIER($WAREHOUSE)
  SCHEDULE = 'USING CRON 0 */4 * * * UTC' -- every 4 hours
AS
MERGE INTO DATA_GOVERNANCE.ASSET_INVENTORY t
USING (
  SELECT 
    TABLE_CATALOG || '.' || TABLE_SCHEMA || '.' || TABLE_NAME AS FULL_NAME,
    TABLE_TYPE AS OBJECT_DOMAIN,
    ROW_COUNT,
    LAST_ALTERED AS LAST_DDL_TIME
  FROM IDENTIFIER($DATABASE).INFORMATION_SCHEMA.TABLES
  WHERE TABLE_SCHEMA NOT IN ('INFORMATION_SCHEMA')
) s
ON t.FULL_NAME = s.FULL_NAME
WHEN MATCHED THEN UPDATE SET
  OBJECT_DOMAIN = s.OBJECT_DOMAIN,
  ROW_COUNT = s.ROW_COUNT,
  LAST_DDL_TIME = s.LAST_DDL_TIME,
  LAST_SEEN = CURRENT_TIMESTAMP
WHEN NOT MATCHED THEN INSERT (
  FULL_NAME, OBJECT_DOMAIN, ROW_COUNT, LAST_DDL_TIME, FIRST_DISCOVERED, LAST_SEEN, CLASSIFIED
) VALUES (
  s.FULL_NAME, s.OBJECT_DOMAIN, s.ROW_COUNT, s.LAST_DDL_TIME, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, FALSE
);

-- Recompute queue priority
CREATE OR REPLACE TASK DATA_GOVERNANCE.TASK_QUEUE_PRIORITY
  WAREHOUSE = IDENTIFIER($WAREHOUSE)
  AFTER DATA_GOVERNANCE.TASK_DISCOVERY_SCAN
AS
UPDATE DATA_GOVERNANCE.ASSET_INVENTORY
SET QUEUE_PRIORITY = (
  COALESCE(ROW_COUNT,0)/1000 + 
  CASE WHEN FULL_NAME ILIKE '%CUSTOMER%' OR FULL_NAME ILIKE '%USER%' OR FULL_NAME ILIKE '%PII%' THEN 50 ELSE 0 END +
  CASE WHEN FULL_NAME ILIKE '%FINANCE%' OR FULL_NAME ILIKE '%PAYROLL%' OR FULL_NAME ILIKE '%INVOICE%' THEN 40 ELSE 0 END
)
WHERE COALESCE(CLASSIFIED, FALSE) = FALSE;

-- SLA alerting: flag assets unclassified >= 5 business days since FIRST_DISCOVERED
-- This task writes to VIOLATIONS if not already present recently
CREATE OR REPLACE TASK DATA_GOVERNANCE.TASK_SLA_ALERTS
  WAREHOUSE = IDENTIFIER($WAREHOUSE)
  SCHEDULE = 'USING CRON 15 1 * * * UTC'  -- daily 01:15 UTC
AS
INSERT INTO DATA_GOVERNANCE.VIOLATIONS (ID, RULE_CODE, SEVERITY, DESCRIPTION, ASSET_FULL_NAME, DETECTED_AT, STATUS, DETAILS)
SELECT
  UUID_STRING(),
  'SLA_UNCLASSIFIED_5BD',
  'High',
  'Asset not classified within 5 business days',
  inv.FULL_NAME,
  CURRENT_TIMESTAMP,
  'Open',
  OBJECT_CONSTRUCT('first_discovered', inv.FIRST_DISCOVERED, 'last_seen', inv.LAST_SEEN)
FROM DATA_GOVERNANCE.ASSET_INVENTORY inv
LEFT JOIN (
  SELECT ASSET_FULL_NAME, MAX(DETECTED_AT) AS last_det
  FROM DATA_GOVERNANCE.VIOLATIONS
  WHERE RULE_CODE = 'SLA_UNCLASSIFIED_5BD' AND STATUS = 'Open'
  GROUP BY ASSET_FULL_NAME
) v ON v.ASSET_FULL_NAME = inv.FULL_NAME
WHERE COALESCE(inv.CLASSIFIED, FALSE) = FALSE
  AND NETWORKDAYS(inv.FIRST_DISCOVERED::DATE, CURRENT_DATE) >= 5  -- 5 business days per policy 6.1.1
  AND (v.last_det IS NULL OR NETWORKDAYS(v.last_det::DATE, CURRENT_DATE) >= 5);

-- Optional: enable tasks (requires ACCOUNTADMIN or appropriate role)
-- ALTER TASK DATA_GOVERNANCE.TASK_DISCOVERY_SCAN RESUME;
-- ALTER TASK DATA_GOVERNANCE.TASK_QUEUE_PRIORITY RESUME;
-- ALTER TASK DATA_GOVERNANCE.TASK_SLA_ALERTS RESUME;
