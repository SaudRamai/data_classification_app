-- =====================================================
-- ✅ Dynamic Sensitivity Configuration Seed Script
-- Fixed and Optimized Version
-- =====================================================

-- 1️⃣ Create Database and Schemas
CREATE DATABASE IF NOT EXISTS DATA_CLASSIFICATION_DB;
USE DATABASE DATA_CLASSIFICATION_DB;

-- Create Governance Schema
CREATE SCHEMA IF NOT EXISTS DATA_CLASSIFICATION_GOVERNANCE;
USE SCHEMA DATA_CLASSIFICATION_GOVERNANCE;

-- Create Scan Catalog Schema
CREATE SCHEMA IF NOT EXISTS SCAN_CATALOG;

-- Create TABLE_SAMPLES in SCAN_CATALOG
CREATE TABLE IF NOT EXISTS DATA_CLASSIFICATION_DB.SCAN_CATALOG.TABLE_SAMPLES (
    TABLE_CATALOG STRING,
    TABLE_SCHEMA STRING, 
    TABLE_NAME STRING,
    SAMPLE_DATA VARIANT,
    SAMPLE_SIZE NUMBER,
    SAMPLE_METHOD STRING,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- 2️⃣ Core Sensitivity Tables
CREATE OR REPLACE TABLE SENSITIVE_PATTERNS (
    PATTERN_ID STRING PRIMARY KEY,
    CATEGORY STRING NOT NULL,
    PATTERN STRING NOT NULL,
    SENSITIVITY_WEIGHT FLOAT DEFAULT 0.5,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_BY STRING,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    VERSION_NUMBER INTEGER DEFAULT 1
);

-- Add AI/ML specific categories and patterns
CREATE OR REPLACE TABLE AI_DETECTION_PATTERNS (
    PATTERN_ID STRING PRIMARY KEY,
    CATEGORY STRING NOT NULL,
    PATTERN STRING NOT NULL,
    DESCRIPTION STRING,
    CONFIDENCE_LEVEL FLOAT DEFAULT 0.8,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_BY STRING,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    VERSION_NUMBER INTEGER DEFAULT 1
);

-- Enhanced sensitive keywords with AI/ML specific terms
CREATE OR REPLACE TABLE SENSITIVE_KEYWORDS (
    KEYWORD_ID STRING NOT NULL,
    CATEGORY STRING NOT NULL,
    KEYWORD STRING NOT NULL,
    MATCH_TYPE_CODE STRING DEFAULT 'FUZZY',
    SENSITIVITY_WEIGHT FLOAT DEFAULT 0.5,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_BY STRING,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    VERSION_NUMBER INTEGER DEFAULT 1,
    METADATA VARIANT,
    CONSTRAINT PK_SENSITIVE_KEYWORDS PRIMARY KEY (KEYWORD_ID)
);

-- Add AI/ML specific detection categories
CREATE OR REPLACE TABLE AI_DETECTION_CATEGORIES (
    CATEGORY_ID STRING PRIMARY KEY,
    CATEGORY_NAME STRING NOT NULL,
    DESCRIPTION STRING,
    SEVERITY_LEVEL NUMBER(1) DEFAULT 3,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_BY STRING NOT NULL,
    CREATED_AT TIMESTAMP_NTZ NOT NULL,
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    VERSION_NUMBER NUMBER DEFAULT 1
);

CREATE OR REPLACE TABLE SENSITIVITY_CATEGORIES (
    CATEGORY_ID STRING PRIMARY KEY,
    CATEGORY_NAME STRING NOT NULL,
    DESCRIPTION STRING,
    CONFIDENTIALITY_LEVEL NUMBER(1,0) DEFAULT 1,
    INTEGRITY_LEVEL NUMBER(1,0) DEFAULT 1,
    AVAILABILITY_LEVEL NUMBER(1,0) DEFAULT 1,
    DETECTION_THRESHOLD FLOAT DEFAULT 0.5,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_BY STRING NOT NULL,
    CREATED_AT TIMESTAMP_NTZ NOT NULL,
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    VERSION_NUMBER NUMBER DEFAULT 1,
    METADATA VARIANT
);

CREATE OR REPLACE TABLE SENSITIVITY_THRESHOLDS (
    CATEGORY VARCHAR,
    THRESHOLD FLOAT,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

CREATE OR REPLACE TABLE SENSITIVITY_WEIGHTS (
    FACTOR VARCHAR,
    WEIGHT FLOAT,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- 3️⃣ Supporting Tables
CREATE OR REPLACE TABLE ASSET_COLUMNS (
    DATABASE_NAME STRING,
    SCHEMA_NAME STRING,
    TABLE_NAME STRING,
    COLUMN_NAME STRING,
    DATA_TYPE STRING,
    IS_NULLABLE STRING,
    ORDINAL_POSITION NUMBER,
    LAST_SEEN TIMESTAMP_NTZ,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY (DATABASE_NAME, SCHEMA_NAME, TABLE_NAME, COLUMN_NAME)
);

CREATE OR REPLACE TABLE COLUMN_BUNDLES (
    BUNDLE_ID STRING PRIMARY KEY,
    BUNDLE_NAME STRING NOT NULL,
    CATEGORY STRING NOT NULL,
    DESCRIPTION STRING,
    COLUMNS VARIANT,
    BOOST FLOAT DEFAULT 1.0,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_BY STRING NOT NULL,
    CREATED_AT TIMESTAMP_NTZ NOT NULL,
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    VERSION_NUMBER NUMBER DEFAULT 1,
    METADATA VARIANT
);

-- Add AI/ML model metadata
CREATE OR REPLACE TABLE AI_MODEL_METADATA (
    MODEL_ID STRING PRIMARY KEY,
    MODEL_NAME STRING NOT NULL,
    VERSION STRING NOT NULL,
    DESCRIPTION STRING,
    MODEL_TYPE STRING,
    TRAINING_DATA_RANGE STRING,
    PERFORMANCE_METRICS VARIANT,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_BY STRING NOT NULL,
    CREATED_AT TIMESTAMP_NTZ NOT NULL,
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ
);

CREATE OR REPLACE TABLE SENSITIVE_BUNDLES (
    BUNDLE_NAME STRING,
    CATEGORY STRING,
    COLUMNS VARIANT,
    BOOST FLOAT,
    PRIORITY NUMBER DEFAULT 100,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    VERSION STRING,
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

CREATE OR REPLACE TABLE COMPLIANCE_MAPPING (
    DETECTED_CATEGORY STRING,
    FRAMEWORK STRING,
    RULE VARIANT,
    PRIORITY NUMBER DEFAULT 100,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

CREATE OR REPLACE TABLE SENSITIVITY_MODEL_CONFIG (
    KEY STRING,
    VALUE STRING,
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- Enhanced audit table with AI detection capabilities
CREATE OR REPLACE TABLE AI_DETECTION_AUDIT (
    DETECTION_ID STRING PRIMARY KEY,
    DETECTION_TYPE STRING NOT NULL,
    DETECTION_SOURCE STRING,
    CONFIDENCE_SCORE FLOAT,
    RAW_DATA VARIANT,
    PROCESSED_DATA VARIANT,
    DETECTION_RULES VARIANT,
    STATUS STRING DEFAULT 'NEW',
    CREATED_BY STRING NOT NULL,
    CREATED_AT TIMESTAMP_NTZ NOT NULL,
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    METADATA VARIANT
);

CREATE OR REPLACE TABLE SENSITIVE_AUDIT (
    AUDIT_ID STRING PRIMARY KEY,
    SCAN_ID STRING,
    TABLE_CATALOG STRING,
    TABLE_SCHEMA STRING,
    TABLE_NAME STRING,
    COLUMN_NAME STRING,
    CATEGORY STRING,
    CONFIDENCE FLOAT,
    SEVERITY STRING,
    CIA STRING,
    BUNDLE_DETECTED BOOLEAN,
    DETECTION_METHOD STRING,
    SAMPLE_DATA VARIANT,
    DETAILS VARIANT,
    STATUS STRING DEFAULT 'NEW',
    CREATED_BY STRING NOT NULL,
    CREATED_AT TIMESTAMP_NTZ NOT NULL,
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    VERSION_NUMBER NUMBER DEFAULT 1,
    METADATA VARIANT
);

-- Enhanced classification audit with AI metrics
CREATE OR REPLACE TABLE CLASSIFICATION_AUDIT (
    RUN_ID STRING PRIMARY KEY,
    SCAN_TYPE STRING,
    START_TIME TIMESTAMP_NTZ NOT NULL,
    END_TIME TIMESTAMP_NTZ,
    STATUS STRING,
    TABLES_SCANNED NUMBER,
    COLUMNS_SCANNED NUMBER,
    FINDINGS_COUNT NUMBER,
    AI_DETECTIONS NUMBER,
    CONFIDENCE_THRESHOLD FLOAT,
    EXECUTION_PARAMS VARIANT,
    ERROR_MESSAGE STRING,
    CREATED_BY STRING NOT NULL,
    CREATED_AT TIMESTAMP_NTZ NOT NULL,
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    METADATA VARIANT
);

-- 4 Ensure Tables Exist and Have Correct Schema
-- Skip truncation to preserve existing data
-- 3️⃣ Insert Seed Data with MERGE Statements
-- First ensure all tables have the correct structure
BEGIN
    -- Ensure SENSITIVE_PATTERNS has all columns
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS VERSION_NUMBER INTEGER DEFAULT 1';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS UPDATED_BY STRING';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS UPDATED_AT TIMESTAMP_NTZ';
    
    -- Ensure SENSITIVE_KEYWORDS has all columns with proper error handling
    BEGIN
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS VERSION_NUMBER INTEGER DEFAULT 1';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS UPDATED_BY STRING';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS UPDATED_AT TIMESTAMP_NTZ';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS METADATA VARIANT';
    EXCEPTION
        WHEN OTHER THEN
            -- Log the error but continue execution
            LET LINE := SQLSTATE || ': ' || SQLERRM;
            EXECUTE IMMEDIATE 'CALL SYSTEM$LOG(''WARNING'', ''Error altering tables: ' || REPLACE(LINE, '''', '''''') || ''')';
    END;
    
    -- Insert/Update patterns using MERGE
    MERGE INTO SENSITIVE_PATTERNS AS target
    USING (
        SELECT 
            column1 AS PATTERN_ID,
            column2 AS CATEGORY,
            column3 AS PATTERN,
            column4 AS SENSITIVITY_WEIGHT,
            column5 AS IS_ACTIVE,
            column6 AS CREATED_BY,
            column7 AS CREATED_AT,
            column8 AS VERSION_NUMBER
        FROM (VALUES
            -- AI/ML Patterns
            (GENERATE_UUID(), 'AI_MODEL', '\\b(?:tensorflow|pytorch|scikit-learn)\\b', 0.9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
            (GENERATE_UUID(), 'AI_MODEL', '\\b(?:bert|gpt|transformer|llm)\\b', 0.85, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
            
            -- PII Patterns
            (GENERATE_UUID(), 'PII', '\\b\\d{3}-\\d{2}-\\d{4}\\b', 1.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
            (GENERATE_UUID(), 'PII', '\\b[A-Z]\\d[A-Z] \\d[A-Z]\\d\\b', 1.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
            
            -- Financial Patterns
            (GENERATE_UUID(), 'FINANCIAL', '\\b\\d{4}[- ]?\\d{4}[- ]?\\d{4}[- ]?\\d{4}\\b', 1.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
            (GENERATE_UUID(), 'FINANCIAL', '\\b\\d{3}-?\\d{2}-?\\d{4}\\b', 0.9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1)
        ) AS source_data
    ) AS source
    ON target.PATTERN_ID = source.PATTERN_ID
    WHEN MATCHED THEN
        UPDATE SET
            target.CATEGORY = source.CATEGORY,
            target.PATTERN = source.PATTERN,
            target.SENSITIVITY_WEIGHT = source.SENSITIVITY_WEIGHT,
            target.IS_ACTIVE = source.IS_ACTIVE,
            target.UPDATED_BY = CURRENT_USER(),
            target.UPDATED_AT = CURRENT_TIMESTAMP(),
            target.VERSION_NUMBER = source.VERSION_NUMBER + 1
    WHEN NOT MATCHED THEN
        INSERT (PATTERN_ID, CATEGORY, PATTERN, SENSITIVITY_WEIGHT, 
                IS_ACTIVE, CREATED_BY, CREATED_AT, VERSION_NUMBER)
        VALUES (source.PATTERN_ID, source.CATEGORY, source.PATTERN, source.SENSITIVITY_WEIGHT, 
                source.IS_ACTIVE, source.CREATED_BY, source.CREATED_AT, source.VERSION_NUMBER);
    
    -- Insert/Update keywords using MERGE
    MERGE INTO SENSITIVE_KEYWORDS AS target
    USING (
        SELECT 
            column1 AS KEYWORD_ID,
            column2 AS CATEGORY,
            column3 AS KEYWORD,
            column4 AS MATCH_TYPE_CODE,
            column5 AS SENSITIVITY_WEIGHT,
            column6 AS IS_ACTIVE,
            column7 AS CREATED_BY,
            column8 AS CREATED_AT,
            column9 AS VERSION_NUMBER
        FROM (VALUES
            -- AI/ML Keywords
            (GENERATE_UUID(), 'AI_MODEL', 'tensorflow', 'EXACT', 0.8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
            (GENERATE_UUID(), 'AI_MODEL', 'pytorch', 'EXACT', 0.8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
            (GENERATE_UUID(), 'AI_MODEL', 'llm', 'EXACT', 0.9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
            
            -- PII Keywords
            (GENERATE_UUID(), 'PII', 'ssn', 'EXACT', 1.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
            (GENERATE_UUID(), 'PII', 'social security', 'FUZZY', 0.9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1)
        ) AS source_data
    ) AS source
    ON target.KEYWORD_ID = source.KEYWORD_ID
    WHEN MATCHED THEN
        UPDATE SET
            target.CATEGORY = source.CATEGORY,
            target.KEYWORD = source.KEYWORD,
            target.MATCH_TYPE_CODE = source.MATCH_TYPE_CODE,
            target.SENSITIVITY_WEIGHT = source.SENSITIVITY_WEIGHT,
            target.IS_ACTIVE = source.IS_ACTIVE,
            target.UPDATED_BY = CURRENT_USER(),
            target.UPDATED_AT = CURRENT_TIMESTAMP(),
            target.VERSION_NUMBER = source.VERSION_NUMBER + 1
    WHEN NOT MATCHED THEN
        INSERT (KEYWORD_ID, CATEGORY, KEYWORD, MATCH_TYPE_CODE, SENSITIVITY_WEIGHT, 
                IS_ACTIVE, CREATED_BY, CREATED_AT, VERSION_NUMBER)
        VALUES (source.KEYWORD_ID, source.CATEGORY, source.KEYWORD, source.MATCH_TYPE_CODE, 
                source.SENSITIVITY_WEIGHT, source.IS_ACTIVE, source.CREATED_BY, 
                source.CREATED_AT, source.VERSION_NUMBER);
    -- Add error handling for the entire script
    SELECT 'Script executed successfully' AS result;
    
EXCEPTION
    WHEN OTHER THEN
        LET error_msg STRING := 'Error in script execution: ' || SQLSTATE || ': ' || SQLERRM;
        EXECUTE IMMEDIATE 'CALL SYSTEM$LOG(''ERROR'', ''' || REPLACE(error_msg, '''', '''''') || ''')';
        RAISE;
END;
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS CREATED_BY STRING';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS CREATED_AT TIMESTAMP_NTZ';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS UPDATED_BY STRING';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS UPDATED_AT TIMESTAMP_NTZ';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS VERSION_NUMBER INTEGER DEFAULT 1';
    EXCEPTION
        WHEN OTHER THEN
            -- Log the error but continue execution
            LET LINE := SQLSTATE || ': ' || SQLERRM;
            EXECUTE IMMEDIATE 'CALL SYSTEM$LOG(''WARNING'', ''Error altering tables: ' || REPLACE(LINE, '''', '''''') || ''')';
    END;
    
    -- Add any missing columns to SENSITIVE_KEYWORDS
    BEGIN
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS CREATED_BY STRING';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS CREATED_AT TIMESTAMP_NTZ';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS UPDATED_BY STRING';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS UPDATED_AT TIMESTAMP_NTZ';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS VERSION_NUMBER INTEGER DEFAULT 1';
        EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS METADATA VARIANT';
    EXCEPTION
        WHEN OTHER THEN
            -- Log the error but continue execution
            LET LINE := SQLSTATE || ': ' || SQLERRM;
            EXECUTE IMMEDIATE 'CALL SYSTEM$LOG(''WARNING'', ''Error altering tables: ' || REPLACE(LINE, '''', '''''') || ''')';
    END;
    
    -- Commit the transaction
    COMMIT;
    
    -- Log success
    EXECUTE IMMEDIATE 'CALL SYSTEM$LOG(''INFO'', ''Successfully created/validated SENSITIVE_PATTERNS and SENSITIVE_KEYWORDS tables'')';
    
    -- Create other necessary tables...
    
    -- Log completion
    SYSTEM$LOG('INFO', 'All tables verified/created successfully');
    
EXCEPTION
    WHEN OTHER THEN
        -- Log the error
        LET error_msg := 'Error in table creation: ' || SQLERRM;
        SYSTEM$LOG('ERROR', error_msg);
        -- Rollback in case of error
        ROLLBACK;
        -- Re-raise the exception with more context
        RAISE EXCEPTION('Error in table creation: %', SQLERRM);
END;

-- 5 Insert Seed Data
-- ========================
-- SENSITIVE_PATTERNS
-- ========================
-- First ensure the table has the correct structure
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS SENSITIVITY_WEIGHT FLOAT DEFAULT 0.5';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS IS_ACTIVE BOOLEAN DEFAULT TRUE';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS CREATED_BY STRING';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_PATTERNS ADD COLUMN IF NOT EXISTS CREATED_AT TIMESTAMP_NTZ';
EXCEPTION
    WHEN OTHER THEN
        LET LINE := SQLCODE || '': '' || SQLERRM;
        RAISE NOTICE ''Error altering SENSITIVE_PATTERNS: %'', LINE;
END;

-- Insert or update patterns
MERGE INTO SENSITIVE_PATTERNS AS target
USING (
    SELECT 
        column1 AS PATTERN_ID,
        column2 AS CATEGORY,
        column3 AS PATTERN,
        column4 AS SENSITIVITY_WEIGHT,
        column5 AS IS_ACTIVE,
        column6 AS CREATED_BY,
        column7 AS CREATED_AT,
        column8 AS VERSION_NUMBER
    FROM (VALUES
        -- AI/ML Detection Patterns
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AI_MODEL', '\\b(?:tensorflow|pytorch|scikit-learn)\\b', 0.9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AI_MODEL', '\\b(?:bert|gpt|transformer|llm)\\b', 0.85, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AI_MODEL', '\\b(?:training_data|test_set|validation_set)\\b', 0.8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        
        -- PII: Personal Information about Individuals
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'PII', '\\b\\d{3}-\\d{2}-\\d{4}\\b', 10.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'PII', '\\b[\\w._%+-]+@[\\w.-]+\\.[a-zA-Z]{2,}\\b', 9.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'PII', '\\b\\d{3}-\\d{3}-\\d{4}\\b', 8.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'PII', '\\b[A-Z]{5}\\d{4}[A-Z]\\b', 10.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'PII', '\\b\\d{12}\\b', 10.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        
        -- FINANCIAL: Financial Account Details
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'FINANCIAL', '\\b\\d{16}\\b', 10.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'FINANCIAL', '\\b\\d{9,12}\\b', 9.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'FINANCIAL', '\\b[A-Z]{2}\\d{2}[A-Z0-9]{1,30}\\b', 9.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        
        -- SOX: Sarbanes-Oxley Compliance Data
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'SOX', '\\b[A-Z]{2}\\d{6,8}\\b', 7.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'SOX', '\\bGL-[A-Z0-9]{8}\\b', 8.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'SOX', '\\bJE-\\d{8}-\\d{4}\\b', 8.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'SOX', '\\bFS-Q[1-4]-\\d{4}\\b', 9.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        
        -- SOC2: Security & Compliance Data
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'SOC2', '\\b[A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12}\\b', 8.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'SOC2', '\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b', 7.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        
        -- AUTH: Authentication Credentials
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AUTH', '\\b[A-Za-z0-9+/]{40,}\\b', 10.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AUTH', '\\bbearer\\s+[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*', 9.0, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        
        -- INTERNAL: Operational Data Patterns (Low Sensitivity)
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_date$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_at$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_timestamp$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_status$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_state$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_type$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_category$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', 'is_.*', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', 'has_.*', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_code$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_id$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_number$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_description$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', '.*_name$', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1)
    ) AS source_data
) AS source
ON target.PATTERN = source.PATTERN AND target.CATEGORY = source.CATEGORY
WHEN MATCHED AND (target.VERSION_NUMBER <= source.VERSION_NUMBER) THEN
    UPDATE SET 
        target.SENSITIVITY_WEIGHT = source.SENSITIVITY_WEIGHT,
        target.IS_ACTIVE = source.IS_ACTIVE,
        target.UPDATED_BY = source.CREATED_BY,
        target.UPDATED_AT = CURRENT_TIMESTAMP(),
        target.VERSION_NUMBER = target.VERSION_NUMBER + 1
WHEN NOT MATCHED THEN
    INSERT (PATTERN_ID, CATEGORY, PATTERN, SENSITIVITY_WEIGHT, 
            IS_ACTIVE, CREATED_BY, CREATED_AT, VERSION_NUMBER)
    VALUES (
        source.PATTERN_ID, 
        source.CATEGORY, 
        source.PATTERN, 
        source.SENSITIVITY_WEIGHT, 
        source.IS_ACTIVE, 
        source.CREATED_BY, 
        source.CREATED_AT, 
        source.VERSION_NUMBER
    )

-- FINANCIAL, SOX, SOC2, and AUTH patterns have been moved into the main MERGE statement above

-- ========================
-- SENSITIVE_KEYWORDS
-- ========================
-- First ensure the table has the correct structure
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS SENSITIVITY_WEIGHT FLOAT DEFAULT 0.5';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS MATCH_TYPE_CODE STRING DEFAULT ''FUZZY''';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS IS_ACTIVE BOOLEAN DEFAULT TRUE';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS CREATED_BY STRING';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVE_KEYWORDS ADD COLUMN IF NOT EXISTS CREATED_AT TIMESTAMP_NTZ';
EXCEPTION
    WHEN OTHER THEN
        LET LINE := SQLCODE || '': '' || SQLERRM;
        EXECUTE IMMEDIATE 'CALL SYSTEM$LOG(''WARNING'', ''Error altering SENSITIVE_KEYWORDS: ' || REPLACE(LINE, '''', '''''') || ''')';
END;

-- Insert or update keywords
MERGE INTO SENSITIVE_KEYWORDS AS target
USING (
    SELECT 
        $1 AS KEYWORD_ID,
        $2 AS CATEGORY,
        $3 AS KEYWORD,
        $4 AS MATCH_TYPE_CODE,
        $5 AS SENSITIVITY_WEIGHT,
        $6 AS IS_ACTIVE,
        $7 AS CREATED_BY,
        $8 AS CREATED_AT,
        $9 AS VERSION_NUMBER
) AS source
ON target.KEYWORD = source.KEYWORD AND target.CATEGORY = source.CATEGORY
WHEN MATCHED AND (target.VERSION_NUMBER <= source.VERSION_NUMBER) THEN
    UPDATE SET 
        target.SENSITIVITY_WEIGHT = source.SENSITIVITY_WEIGHT,
        target.IS_ACTIVE = source.IS_ACTIVE,
        target.MATCH_TYPE_CODE = source.MATCH_TYPE_CODE,
        target.UPDATED_BY = source.CREATED_BY,
        target.UPDATED_AT = CURRENT_TIMESTAMP(),
        target.VERSION_NUMBER = target.VERSION_NUMBER + 1
WHEN NOT MATCHED THEN
    INSERT (KEYWORD_ID, CATEGORY, KEYWORD, MATCH_TYPE_CODE, 
            SENSITIVITY_WEIGHT, IS_ACTIVE, CREATED_BY, CREATED_AT, VERSION_NUMBER)
    VALUES (
VALUES
-- AI/ML Keywords
    (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AI_MODEL', 'tensorflow', 'EXACT', 0.8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
    (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AI_MODEL', 'pytorch', 'EXACT', 0.8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
    (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AI_MODEL', 'llm', 'EXACT', 0.9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
    (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AI_MODEL', 'training_data', 'FUZZY', 0.7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),
    (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'AI_MODEL', 'inference', 'FUZZY', 0.7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1),

-- PII Keywords
    (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'PII', 'ssn', 'EXACT', 10, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1)
('PII', 'social_security', 10, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('PII', 'passport', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('PII', 'drivers_license', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('PII', 'medical_record', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('PII', 'address', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('PII', 'phone', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('PII', 'email', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('PII', 'date_of_birth', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),

-- FINANCIAL: Financial Account Details
('FINANCIAL', 'credit_card', 10, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('FINANCIAL', 'account_number', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('FINANCIAL', 'routing_number', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('FINANCIAL', 'iban', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('FINANCIAL', 'swift_code', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('FINANCIAL', 'balance', 7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('FINANCIAL', 'transaction_amount', 7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),

-- SOX: Sarbanes-Oxley Compliance Data
('SOX', 'general_ledger', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOX', 'journal_entry', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOX', 'financial_statement', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOX', 'audit_trail', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOX', 'internal_control', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOX', 'revenue_recognition', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOX', 'segregation_duties', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),

-- SOC2: Security & Compliance
('SOC2', 'encryption_key', 10, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOC2', 'access_log', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOC2', 'authentication_token', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOC2', 'security_incident', 8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOC2', 'session_id', 7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOC2', 'firewall_rule', 6, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('SOC2', 'data_retention', 7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),

-- AUTH: Authentication Credentials
('AUTH', 'password', 10, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('AUTH', 'secret_key', 10, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('AUTH', 'api_key', 9, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('AUTH', 'private_key', 10, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),

-- INTERNAL: Operational Data (Low Sensitivity)
('INTERNAL', 'invoice_date', 1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('INTERNAL', 'due_date', 1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('INTERNAL', 'created_date', 1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('INTERNAL', 'updated_date', 1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('INTERNAL', 'status', 1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('INTERNAL', 'type', 1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('INTERNAL', 'category', 1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
('INTERNAL', 'currency_code', 1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()),
(UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INTERNAL', 'country_code', 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP(), 1);

-- ========================
-- SENSITIVITY_CATEGORIES
-- ========================
-- First ensure the table has the correct structure
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVITY_CATEGORIES ADD COLUMN IF NOT EXISTS DETECTION_THRESHOLD FLOAT DEFAULT 0.5';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVITY_CATEGORIES ADD COLUMN IF NOT EXISTS IS_ACTIVE BOOLEAN DEFAULT TRUE';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVITY_CATEGORIES ADD COLUMN IF NOT EXISTS CREATED_BY STRING';
    EXECUTE IMMEDIATE 'ALTER TABLE SENSITIVITY_CATEGORIES ADD COLUMN IF NOT EXISTS CREATED_AT TIMESTAMP_NTZ';
EXCEPTION
    WHEN OTHER THEN
        LET LINE := SQLCODE || '': '' || SQLERRM;
        RAISE NOTICE ''Error altering SENSITIVITY_CATEGORIES: %'', LINE;
END;

-- Now insert the data
INSERT INTO SENSITIVITY_CATEGORIES (CATEGORY, CONFIDENTIALITY_LEVEL, INTEGRITY_LEVEL, AVAILABILITY_LEVEL, DETECTION_THRESHOLD, IS_ACTIVE, CREATED_BY, CREATED_AT)
VALUES
-- SENSITIVE DATA CATEGORIES
('PII', 5, 4, 3, 0.6, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()), -- Personal Information
('FINANCIAL', 5, 5, 4, 0.7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()), -- Financial Accounts
('SOX', 4, 5, 4, 0.7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()), -- SOX Compliance Data
('SOC2', 5, 4, 5, 0.7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()), -- Security Controls
('AUTH', 5, 5, 4, 0.8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()), -- Authentication Data
('INTERNAL', 1, 2, 2, 0.3, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()); -- Operational Data

-- ========================
-- SENSITIVE_BUNDLES
-- ========================
INSERT INTO SENSITIVE_BUNDLES (BUNDLE_NAME, CATEGORY, COLUMNS, BOOST, IS_ACTIVE, CREATED_BY, CREATED_AT)
SELECT 'IDENTITY_PII', 'PII', PARSE_JSON('["ssn","social_security","government_id","passport_no","drivers_license"]'), 0.6, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()
UNION ALL
SELECT 'CONTACT_PII', 'PII', PARSE_JSON('["email","phone_number","mobile_number","address","city","state","zip"]'), 0.5, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()
UNION ALL
SELECT 'FINANCIAL_ACCOUNTS', 'FINANCIAL', PARSE_JSON('["account_number","routing_number","iban","swift_code","credit_card"]'), 0.7, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()
UNION ALL
SELECT 'SOX_FINANCIAL', 'SOX', PARSE_JSON('["general_ledger","journal_entry","financial_statement","audit_trail","revenue_amount"]'), 0.6, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()
UNION ALL
SELECT 'SOC2_SECURITY', 'SOC2', PARSE_JSON('["access_log","user_id","ip_address","session_token","authentication_method"]'), 0.5, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()
UNION ALL
SELECT 'AUTHENTICATION', 'AUTH', PARSE_JSON('["password","secret_key","api_key","private_key","access_token"]'), 0.8, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()
UNION ALL
SELECT 'INTERNAL_DATES', 'INTERNAL', PARSE_JSON('["invoice_date","due_date","created_date","updated_date","processed_date"]'), 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP()
UNION ALL
SELECT 'INTERNAL_STATUS', 'INTERNAL', PARSE_JSON('["status","state","type","category","flag"]'), 0.1, TRUE, CURRENT_USER(), CURRENT_TIMESTAMP();

-- ========================
-- Internal data patterns have been moved to SENSITIVE_PATTERNS with category 'INTERNAL'
-- ========================

-- ========================
-- SENSITIVE_AUDIT Table Definition
-- ========================
CREATE OR REPLACE TABLE SENSITIVE_AUDIT (
    AUDIT_ID STRING NOT NULL DEFAULT UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING) PRIMARY KEY,
    TABLE_CATALOG STRING,
    TABLE_SCHEMA STRING,
    TABLE_NAME STRING NOT NULL,
    COLUMN_NAME STRING NOT NULL,
    CATEGORY STRING,
    CONFIDENCE FLOAT,
    CIA STRING,
    BUNDLE_DETECTED BOOLEAN,
    SAMPLE_DATA STRING,
    METADATA VARIANT,
    CREATED_BY STRING,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_BY STRING,
    UPDATED_AT TIMESTAMP_NTZ,
    VERSION_NUMBER INTEGER DEFAULT 1
);

-- ========================
-- SENSITIVE_AUDIT Sample Data
-- ========================
MERGE INTO SENSITIVE_AUDIT AS target
USING (
    SELECT 
        column1 AS AUDIT_ID,
        column2 AS TABLE_NAME,
        column3 AS COLUMN_NAME,
        column4 AS CATEGORY,
        column5 AS CONFIDENCE,
        column6 AS CIA,
        column7 AS BUNDLE_DETECTED,
        column8 AS SAMPLE_DATA,
        column9 AS CREATED_BY,
        column10 AS CREATED_AT
    FROM (VALUES
        -- Sensitive data
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'CUSTOMERS', 'ssn', 'PII', 95, 'C3:I2:A1', TRUE, 'abc123hash', CURRENT_USER(), CURRENT_TIMESTAMP()),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'CUSTOMERS', 'credit_card_number', 'FINANCIAL', 92, 'C4:I4:A3', TRUE, 'def456hash', CURRENT_USER(), CURRENT_TIMESTAMP()),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'FINANCIAL_SYSTEM', 'general_ledger', 'SOX', 88, 'C3:I4:A3', TRUE, 'ghi789hash', CURRENT_USER(), CURRENT_TIMESTAMP()),
        
        -- Internal data
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INVOICES', 'invoice_date', 'INTERNAL', 15, 'C1:I1:A1', FALSE, 'xyz789hash', CURRENT_USER(), CURRENT_TIMESTAMP()),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INVOICES', 'invoice_status', 'INTERNAL', 10, 'C1:I1:A1', FALSE, 'xyz789hash', CURRENT_USER(), CURRENT_TIMESTAMP()),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INVOICES', 'invoice_id', 'INTERNAL', 20, 'C1:I2:A1', FALSE, 'xyz789hash', CURRENT_USER(), CURRENT_TIMESTAMP()),
        (UUID_STRING('6ba7b810-9dad-11d1-80b4-00c04fd430c8', RANDOM()::STRING), 'INVOICES', 'currency_code', 'INTERNAL', 5, 'C1:I1:A1', FALSE, 'xyz789hash', CURRENT_USER(), CURRENT_TIMESTAMP())
    ) AS source_data
) AS source
ON target.AUDIT_ID = source.AUDIT_ID
WHEN MATCHED THEN
    UPDATE SET
        target.TABLE_NAME = source.TABLE_NAME,
        target.COLUMN_NAME = source.COLUMN_NAME,
        target.CATEGORY = source.CATEGORY,
        target.CONFIDENCE = source.CONFIDENCE,
        target.CIA = source.CIA,
        target.BUNDLE_DETECTED = source.BUNDLE_DETECTED,
        target.SAMPLE_DATA = source.SAMPLE_DATA,
        target.UPDATED_BY = CURRENT_USER(),
        target.UPDATED_AT = CURRENT_TIMESTAMP(),
        target.VERSION_NUMBER = target.VERSION_NUMBER + 1
WHEN NOT MATCHED THEN
    INSERT (AUDIT_ID, TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, CATEGORY, 
            CONFIDENCE, CIA, BUNDLE_DETECTED, SAMPLE_DATA, CREATED_BY, CREATED_AT, VERSION_NUMBER)
    VALUES (source.AUDIT_ID, 'DATA_CLASSIFICATION_DB', 'PUBLIC', source.TABLE_NAME, source.COLUMN_NAME, 
            source.CATEGORY, source.CONFIDENCE, source.CIA, source.BUNDLE_DETECTED, 
            source.SAMPLE_DATA, source.CREATED_BY, source.CREATED_AT, 1);

-- ========================
-- MODEL_METADATA
-- ========================
CREATE OR REPLACE TABLE IF NOT EXISTS MODEL_METADATA (
    MODEL_NAME STRING,
    MODEL_VERSION STRING,
    EMBEDDING_MODEL STRING,
    THRESHOLDS VARIANT,
    CREATED_BY STRING,
    CREATED_AT TIMESTAMP_NTZ
);

INSERT INTO MODEL_METADATA (MODEL_NAME, MODEL_VERSION, EMBEDDING_MODEL, THRESHOLDS, CREATED_BY, CREATED_AT)
SELECT ''sensitive_column_classifier'', ''v2.0'', ''all-MiniLM-L6-v2'', 
PARSE_JSON(''{
  "pii_min_confidence": 60,
  "financial_min_confidence": 65, 
  "sox_min_confidence": 55,
  "soc2_min_confidence": 60,
  "auth_min_confidence": 70,
  "internal_max_confidence": 30,
  "require_multiple_evidence": true,
  "bundle_boost": 0.3
}''), CURRENT_USER(), CURRENT_TIMESTAMP()

UNION ALL
SELECT ''internal_data_filter'', ''v1.0'', ''pattern-based'',
PARSE_JSON(''{
  "date_max_confidence": 15,
  "status_max_confidence": 10,
  "id_max_confidence": 20,
  "code_max_confidence": 10,
  "type_max_confidence": 10
}''), CURRENT_USER(), CURRENT_TIMESTAMP()

UNION ALL
SELECT ''sox_compliance_detector'', ''v1.0'', ''financial-bert'',
PARSE_JSON(''{
  "financial_reporting": 0.75,
  "internal_controls": 0.8,
  "audit_trail": 0.75,
  "revenue_recognition": 0.7
}''), CURRENT_USER(), CURRENT_TIMESTAMP();

-- ========================
-- SAMPLING_CONFIG
-- ========================
CREATE OR REPLACE TABLE IF NOT EXISTS SAMPLING_CONFIG (
    TABLE_NAME STRING,
    METHOD STRING,          -- ''full'' | ''random'' | ''stratified''
    FRACTION FLOAT,         -- e.g., 0.02 for 2%
    STRATIFY_COLUMN STRING, -- for stratified sampling
    WEIGHT_COLUMN STRING,   -- optional, can be null
    CONFIG_VERSION STRING,
    ACTIVE_FLAG BOOLEAN DEFAULT TRUE,
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_BY STRING DEFAULT CURRENT_USER(),
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CREATED_BY STRING DEFAULT CURRENT_USER()
);

-- Insert sample policies
INSERT INTO SAMPLING_CONFIG
(TABLE_NAME, METHOD, FRACTION, STRATIFY_COLUMN, WEIGHT_COLUMN, CONFIG_VERSION, ACTIVE_FLAG)
VALUES
(''CUSTOMERS'', ''stratified'', 0.02, ''REGION'', NULL, ''v1'', TRUE),
(''ORDERS'', ''random'', 0.05, NULL, NULL, ''v1'', TRUE),
(''PAYMENTS'', ''full'', 1.0, NULL, NULL, ''v1'', TRUE),
(''PRODUCTS'', ''random'', 0.03, NULL, NULL, ''v1'', TRUE),
(''EMPLOYEES'', ''stratified'', 0.01, ''DEPARTMENT'', ''SALARY'', ''v1'', TRUE);

-- 6️⃣ Add AI/ML Detection Data
-- Insert AI/ML specific detection categories
-- Removed references to non-existent tables
) AS source
ON target.CATEGORY_NAME = source.CATEGORY_NAME
WHEN MATCHED AND target.VERSION_NUMBER <= source.VERSION_NUMBER THEN
    UPDATE SET 
        target.DESCRIPTION = source.DESCRIPTION,
        target.SEVERITY_LEVEL = source.SEVERITY_LEVEL,
        target.IS_ACTIVE = source.IS_ACTIVE,
        target.UPDATED_BY = source.CREATED_BY,
        target.UPDATED_AT = source.CREATED_AT,
        target.VERSION_NUMBER = target.VERSION_NUMBER + 1
WHEN NOT MATCHED THEN
    INSERT (CATEGORY_ID, CATEGORY_NAME, DESCRIPTION, SEVERITY_LEVEL, 
            IS_ACTIVE, CREATED_BY, CREATED_AT, VERSION_NUMBER)
    VALUES (
        source.CATEGORY_ID, source.CATEGORY_NAME, source.DESCRIPTION,
        source.SEVERITY_LEVEL, source.IS_ACTIVE,
        source.CREATED_BY, source.CREATED_AT, source.VERSION_NUMBER
    );

-- Insert AI/ML model metadata
MERGE INTO AI_MODEL_METADATA AS target
USING (
    SELECT $1 AS MODEL_ID, $2 AS MODEL_NAME, $3 AS VERSION, $4 AS DESCRIPTION,
           $5 AS MODEL_TYPE, $6 AS IS_ACTIVE,
           $7 AS CREATED_BY, $8 AS CREATED_AT, $9 AS VERSION_NUMBER
) AS source
ON target.MODEL_NAME = source.MODEL_NAME AND target.VERSION = source.VERSION
WHEN MATCHED AND target.VERSION_NUMBER <= source.VERSION_NUMBER THEN
    UPDATE SET
        target.DESCRIPTION = source.DESCRIPTION,
        target.MODEL_TYPE = source.MODEL_TYPE,
        target.IS_ACTIVE = source.IS_ACTIVE,
        target.UPDATED_BY = source.CREATED_BY,
        target.UPDATED_AT = source.CREATED_AT,
        target.VERSION_NUMBER = target.VERSION_NUMBER + 1
WHEN NOT MATCHED THEN
    INSERT (MODEL_ID, MODEL_NAME, VERSION, DESCRIPTION, MODEL_TYPE,
            IS_ACTIVE, CREATED_BY, CREATED_AT, VERSION_NUMBER)
    VALUES (
        source.MODEL_ID, source.MODEL_NAME, source.VERSION, source.DESCRIPTION,
        source.MODEL_TYPE, source.IS_ACTIVE,
        source.CREATED_BY, source.CREATED_AT, source.VERSION_NUMBER
    );

-- 7️⃣ Set Up Permissions (Run with ACCOUNTADMIN role)
BEGIN
    -- Create role if not exists
    EXECUTE IMMEDIATE 'CREATE ROLE IF NOT EXISTS DATA_GOVERNANCE_READ';
    EXECUTE IMMEDIATE 'CREATE ROLE IF NOT EXISTS DATA_GOVERNANCE_WRITE';
    
    -- Grant schema usage
    EXECUTE IMMEDIATE 'GRANT USAGE ON DATABASE DATA_CLASSIFICATION_DB TO ROLE DATA_GOVERNANCE_READ';
    EXECUTE IMMEDIATE 'GRANT USAGE ON SCHEMA DATA_CLASSIFICATION_DB.DATA_CLASSIFICATION_GOVERNANCE TO ROLE DATA_GOVERNANCE_READ';
    
    -- Grant read permissions
    EXECUTE IMMEDIATE 'GRANT SELECT ON ALL TABLES IN SCHEMA DATA_CLASSIFICATION_DB.DATA_CLASSIFICATION_GOVERNANCE TO ROLE DATA_GOVERNANCE_READ';
    EXECUTE IMMEDIATE 'GRANT SELECT ON FUTURE TABLES IN SCHEMA DATA_CLASSIFICATION_DB.DATA_CLASSIFICATION_GOVERNANCE TO ROLE DATA_GOVERNANCE_READ';
    
    -- Grant write permissions
    EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA DATA_CLASSIFICATION_DB.DATA_CLASSIFICATION_GOVERNANCE TO ROLE DATA_GOVERNANCE_WRITE';
    EXECUTE IMMEDIATE 'GRANT USAGE ON SCHEMA DATA_CLASSIFICATION_DB.DATA_CLASSIFICATION_GOVERNANCE TO ROLE DATA_GOVERNANCE_WRITE';
    
    -- Grant roles to appropriate users/roles
    EXECUTE IMMEDIATE 'GRANT ROLE DATA_GOVERNANCE_READ TO ROLE PUBLIC';
    EXECUTE IMMEDIATE 'GRANT ROLE DATA_GOVERNANCE_WRITE TO ROLE SYSADMIN';
    
    RAISE NOTICE 'Permissions set up successfully';
EXCEPTION
    WHEN OTHER THEN
        LET LINE := SQLCODE || ': ' || SQLERRM;
        RAISE NOTICE 'Error setting up permissions: %', LINE;
END;
